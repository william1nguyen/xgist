name: CI/CD Workflow for AI

on:
  push:
    branches: [master]

permissions: write-all

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.filter.outputs.changes_detected }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        run: |
          if git rev-parse --verify HEAD^ > /dev/null 2>&1; then
            changed_files=$(git diff --name-only HEAD^ HEAD)
          else
            changed_files=$(git ls-tree --name-only -r HEAD)
          fi
          echo "::set-output name=changed_files::$changed_files"
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            changes_detected:
              - '!apps/**'
              - 'apps/ai/**'

  deploy:
    needs: check-changes
    if: needs.check-changes.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Preset Image Name
        run: |
          IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/ai:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_ENV
      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./apps/ai
          file: ./apps/ai/Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}
      - name: Deploy to CapRover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: "${{ secrets.CAPROVER_SERVER }}"
          app: "${{ secrets.AI_APP_NAME }}"
          token: "${{ secrets.AI_APP_TOKEN }}"
          image: ${{ env.IMAGE_URL }}
