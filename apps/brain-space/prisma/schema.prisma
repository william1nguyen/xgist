generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id
  email     String    @unique
  name      String?
  avatar    String?
  videos    Video[]   @relation("UserVideos")
  likes     Like[]    @relation("UserLikes")
  comments  Comment[] @relation("UserComments")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map("users")
}

model Video {
  id           String    @id @default(cuid())
  title        String    @db.VarChar(255)
  description  String?   @db.Text
  url          String    @db.VarChar(255)
  thumbnailUrl String?   @db.VarChar(255)
  category     String?   @db.VarChar(100)
  tags         Json?     // Store tags as JSON array
  views        Int       @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  userId       String    
  user         User      @relation("UserVideos", fields: [userId], references: [id], onDelete: Cascade)
  likes        Like[]    @relation("VideoLikes")
  comments     Comment[] @relation("VideoComments")

  @@index([userId])
  @@map("videos")
}

model Like {
  id        String   @id @default(cuid())
  videoId   String
  userId    String
  createdAt DateTime @default(now())
  video     Video    @relation("VideoLikes", fields: [videoId], references: [id], onDelete: Cascade)
  user      User     @relation("UserLikes", fields: [userId], references: [id], onDelete: Cascade)

  @@unique([videoId, userId], name: "like_video_user_unique")
  @@index([userId])
  @@index([videoId])
  @@map("likes")
}

model Comment {
  id        String   @id @default(cuid())
  content   String   @db.Text
  videoId   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  video     Video    @relation("VideoComments", fields: [videoId], references: [id], onDelete: Cascade)
  user      User     @relation("UserComments", fields: [userId], references: [id], onDelete: Cascade)

  @@index([videoId])
  @@index([userId])
  @@map("comments")
}